name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: dcmaidbot_ci
          POSTGRES_USER: ${{ secrets.CI_POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.CI_POSTGRES_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Debug - Environment Info
      run: |
        echo "=== Python Version ==="
        python --version
        echo ""
        echo "=== Ruff Version ==="
        ruff --version
        echo ""
        echo "=== File Info ==="
        file handlers/waifu.py
        echo ""
        echo "=== Git Info ==="
        git log -1 --oneline
        echo ""
        echo "=== handlers/waifu.py first 20 lines ==="
        head -20 handlers/waifu.py
        echo ""
        echo "=== handlers/waifu.py line endings ==="
        od -c handlers/waifu.py | head -5

    - name: Debug - Format Check on Single File
      run: |
        echo "=== Checking handlers/waifu.py specifically ==="
        ruff format --check handlers/waifu.py || echo "FAILED"
        echo ""
        echo "=== Showing what ruff would change ==="
        ruff format --diff handlers/waifu.py || true

    - name: Lint with Ruff
      run: |
        ruff check .

    - name: Format with Ruff
      run: |
        ruff format --check .

    - name: Run tests
      env:
        DATABASE_URL: postgresql://${{ secrets.CI_POSTGRES_USER }}:${{ secrets.CI_POSTGRES_PASSWORD }}@localhost:5432/dcmaidbot_ci
      run: |
        # Skip tests requiring OPENAI_API_KEY (run in pre-commit hook instead)
        pytest tests/ -v -m "not requires_openai"
