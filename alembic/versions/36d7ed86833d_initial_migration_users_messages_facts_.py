"""Initial migration: users, messages, facts, stats, memories, jokes

Revision ID: 36d7ed86833d
Revises:
Create Date: 2025-10-26 22:04:13.935882

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "36d7ed86833d"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "jokes",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column(
            "message_id",
            sa.BigInteger(),
            nullable=True,
            comment="Telegram message ID of joke",
        ),
        sa.Column("chat_id", sa.BigInteger(), nullable=False),
        sa.Column("joke_text", sa.Text(), nullable=False),
        sa.Column(
            "joke_type",
            sa.String(length=50),
            nullable=False,
            comment="setup_punchline, pun, transliteration, etc",
        ),
        sa.Column(
            "language", sa.String(length=10), nullable=True, comment="ru, en, mix"
        ),
        sa.Column(
            "context", sa.Text(), nullable=True, comment="What triggered the joke"
        ),
        sa.Column(
            "reactions_count",
            sa.Integer(),
            nullable=False,
            comment="Total reactions received",
        ),
        sa.Column(
            "likes_count", sa.Integer(), nullable=False, comment="Positive reactions"
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_jokes_created_at"), "jokes", ["created_at"], unique=False)
    op.create_table(
        "memories",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column(
            "admin_id",
            sa.BigInteger(),
            nullable=False,
            comment="Admin who created memory",
        ),
        sa.Column(
            "chat_id",
            sa.BigInteger(),
            nullable=True,
            comment="Specific chat or NULL for global",
        ),
        sa.Column(
            "prompt", sa.Text(), nullable=False, comment="Instructions for bot behavior"
        ),
        sa.Column(
            "matching_expression",
            sa.String(length=500),
            nullable=True,
            comment="Regex or text to match",
        ),
        sa.Column(
            "action",
            sa.String(length=255),
            nullable=True,
            comment="Action to take when matched",
        ),
        sa.Column(
            "allowance_token",
            sa.String(length=100),
            nullable=True,
            comment="Token for group access",
        ),
        sa.Column("is_banned", sa.Boolean(), nullable=False),
        sa.Column(
            "priority", sa.Integer(), nullable=False, comment="Higher = checked first"
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("allowance_token"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("telegram_id", sa.BigInteger(), nullable=False),
        sa.Column("username", sa.String(length=255), nullable=True),
        sa.Column("first_name", sa.String(length=255), nullable=True),
        sa.Column("last_name", sa.String(length=255), nullable=True),
        sa.Column("is_friend", sa.Boolean(), nullable=False),
        sa.Column("language_code", sa.String(length=10), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_telegram_id"), "users", ["telegram_id"], unique=True)
    op.create_table(
        "facts",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column(
            "fact_text", sa.Text(), nullable=False, comment="Fact about the user"
        ),
        sa.Column(
            "source",
            sa.Text(),
            nullable=True,
            comment="Where this fact was learned from",
        ),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_facts_created_at"), "facts", ["created_at"], unique=False)
    op.create_index(op.f("ix_facts_user_id"), "facts", ["user_id"], unique=False)
    op.create_table(
        "messages",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("chat_id", sa.BigInteger(), nullable=False),
        sa.Column("message_id", sa.BigInteger(), nullable=False),
        sa.Column("text", sa.Text(), nullable=True),
        sa.Column("message_type", sa.String(length=50), nullable=False),
        sa.Column("language", sa.String(length=10), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_messages_chat_id"), "messages", ["chat_id"], unique=False)
    op.create_index(
        op.f("ix_messages_timestamp"), "messages", ["timestamp"], unique=False
    )
    op.create_table(
        "stats",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column(
            "stat_type",
            sa.String(length=100),
            nullable=False,
            comment="Type of stat: message_count, joke_reactions, etc",
        ),
        sa.Column("value", sa.Float(), nullable=False, comment="Numeric value of stat"),
        sa.Column(
            "extra_data",
            sa.String(length=500),
            nullable=True,
            comment="Additional context as JSON",
        ),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_stats_stat_type"), "stats", ["stat_type"], unique=False)
    op.create_index(op.f("ix_stats_timestamp"), "stats", ["timestamp"], unique=False)
    op.create_index(op.f("ix_stats_user_id"), "stats", ["user_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_stats_user_id"), table_name="stats")
    op.drop_index(op.f("ix_stats_timestamp"), table_name="stats")
    op.drop_index(op.f("ix_stats_stat_type"), table_name="stats")
    op.drop_table("stats")
    op.drop_index(op.f("ix_messages_timestamp"), table_name="messages")
    op.drop_index(op.f("ix_messages_chat_id"), table_name="messages")
    op.drop_table("messages")
    op.drop_index(op.f("ix_facts_user_id"), table_name="facts")
    op.drop_index(op.f("ix_facts_created_at"), table_name="facts")
    op.drop_table("facts")
    op.drop_index(op.f("ix_users_telegram_id"), table_name="users")
    op.drop_table("users")
    op.drop_table("memories")
    op.drop_index(op.f("ix_jokes_created_at"), table_name="jokes")
    op.drop_table("jokes")
    # ### end Alembic commands ###
