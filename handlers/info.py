from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from services import pool_service, activity_service, selection_service

router = Router()

class PoolInfo(StatesGroup):
    waiting_for_pool_name = State()

@router.message(Command("pool_info"))
async def cmd_pool_info(message: Message, state: FSMContext):
    cmd_parts = message.text.split(maxsplit=1)
    
    if len(cmd_parts) > 1:
        # Pool name provided in command
        pool_name = cmd_parts[1].strip()
        await show_pool_info(message, pool_name)
    else:
        # Ask for pool name
        user_pools = pool_service.get_pools_by_participant(message.from_user.id)
        
        if not user_pools:
            await message.answer("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø—É–ª–∞.")
            return
        
        pool_list = "\n".join([f"{i+1}. {pool.name}" for i, pool in enumerate(user_pools)])
        
        await message.answer(f"–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–ª (–≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä):\n{pool_list}")
        await state.set_state(PoolInfo.waiting_for_pool_name)
        await state.update_data(user_pools=user_pools)

@router.message(PoolInfo.waiting_for_pool_name)
async def process_pool_name(message: Message, state: FSMContext):
    data = await state.get_data()
    user_pools = data.get("user_pools", [])
    
    try:
        # Try to interpret as index
        if message.text.isdigit():
            index = int(message.text) - 1
            if 0 <= index < len(user_pools):
                pool_name = user_pools[index].name
                await show_pool_info(message, pool_name)
                await state.clear()
                return
        
        # Try to interpret as pool name
        pool_name = message.text.strip()
        pool = pool_service.get_pool(pool_name)
        
        if pool and any(p.user_id == message.from_user.id for p in pool.participants):
            await show_pool_info(message, pool_name)
        else:
            await message.answer("‚ùå –ü—É–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –≤—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
    
    except (ValueError, IndexError):
        await message.answer("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—É–ª–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ.")
    
    await state.clear()

async def show_pool_info(message: Message, pool_name: str):
    """Show detailed information about a pool"""
    pool = pool_service.get_pool(pool_name)
    
    if not pool:
        await message.answer(f"‚ùå –ü—É–ª —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º '{pool_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return
    
    # Check if user is a participant
    if not any(p.user_id == message.from_user.id for p in pool.participants):
        await message.answer(f"‚ùå –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –ø—É–ª–∞ '{pool_name}'.")
        return
    
    # Prepare pool info
    activities_count = len(pool.activities)
    participants_count = len(pool.participants)
    
    # Find creator name
    creator_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
    for participant in pool.participants:
        if participant.user_id == pool.creator_id:
            creator_name = participant.username
            break
    
    # Get participant names
    participant_list = []
    for participant in pool.participants:
        user_penalty = pool.penalties.get(participant.user_id, 0.0)
        penalty_info = f" (—à—Ç—Ä–∞—Ñ: {user_penalty:.2f})" if user_penalty > 0 else ""
        creator_mark = " üëë" if participant.user_id == pool.creator_id else ""
        participant_list.append(f"- {participant.username}{penalty_info}{creator_mark}")
    
    participants_text = "\n".join(participant_list)
    
    # Get activities info
    activities = activity_service.get_activities(pool_name)
    
    activities_info = ""
    if activities:
        top_activities = sorted(activities, key=lambda a: a.selection_count, reverse=True)[:5]
        
        if top_activities:
            activities_info = "\n\n<b>–°–∞–º—ã–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</b>:\n"
            for i, activity in enumerate(top_activities):
                activities_info += f"{i+1}. {activity.content} (–≤—ã–±—Ä–∞–Ω–æ: {activity.selection_count})\n"
    
    # Prepare response
    response = (
        f"üìä <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—É–ª–µ '{pool_name}'</b>\n\n"
        f"<b>–°–æ–∑–¥–∞—Ç–µ–ª—å</b>: {creator_name}\n"
        f"<b>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π</b>: {activities_count}\n"
        f"<b>–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤</b>: {participants_count}\n\n"
        f"<b>–£—á–∞—Å—Ç–Ω–∏–∫–∏</b>:\n{participants_text}"
        f"{activities_info}"
    )
    
    await message.answer(response, parse_mode="HTML")

@router.message(Command("help"))
async def cmd_help(message: Message):
    """Handler for /help command"""
    user_name = message.from_user.first_name
    
    help_text = (
        f"(„Å£‚óî‚ó°‚óî)„Å£ <b>–ü—Ä–∏–≤–µ—Ç, {user_name}!</b> –í–æ—Ç —á—Ç–æ —è —É–º–µ—é~\n\n"
        
        f"<b>üéÅ –û –±–æ—Ç–µ</b>\n"
        f"–Ø –∫–∞–∫ –≤–æ–ª—à–µ–±–Ω–∞—è –∫–æ—Ä–æ–±–∫–∞ —Å –∑–∞–ø–∏—Å–∫–∞–º–∏-–∏–¥–µ—è–º–∏ –æ —Ç–æ–º, —á—Ç–æ –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å –≤–º–µ—Å—Ç–µ —Å –¥—Ä—É–∑—å—è–º–∏! "
        f"–°–æ–∑–¥–∞–π —Å–≤–æ–π –ø—É–ª –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π, –¥–æ–±–∞–≤—å —Ç—É–¥–∞ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∏–¥–µ–∏ –∏ –ø—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–∑–µ–π. "
        f"–ö–∞–∂–¥—ã–π –º–æ–∂–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç—å –≤–∞—à—É –æ–±—â—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é —Å–≤–æ–∏–º–∏ –∏–¥–µ—è–º–∏, –∞ –∫–æ–≥–¥–∞ –∑–∞—Ö–æ—Ç–∏—Ç–µ —á–µ–º-—Ç–æ –∑–∞–Ω—è—Ç—å—Å—è - "
        f"—è —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –≤—ã–±–µ—Ä—É –æ–¥–Ω—É –∏–∑ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π! („Å§‚úßœâ‚úß)„Å§\n\n"
        
        f"<b>‚òÖ.:*„Éª¬∞‚òÜ –ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è ‚òÜ¬∞„Éª*:.‚òÖ</b>\n\n"
        
        f"<b>–®–∞–≥ 1: –°–æ–∑–¥–∞–π —Å–≤–æ–π –ø—É–ª –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π</b>\n"
        f"–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /create_pool\n"
        f"–ü—Ä–∏–¥—É–º–∞–π –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —Å–≤–æ–µ–≥–æ –ø—É–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–í—ã—Ö–æ–¥–Ω—ã–µ', '–ù–∞—Å—Ç–æ–ª–∫–∏', '–§–∏–ª—å–º—ã')\n\n"
        
        f"<b>–®–∞–≥ 2: –î–æ–±–∞–≤—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –ø—É–ª</b>\n"
        f"–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /add_activity\n"
        f"–í—ã–±–µ—Ä–∏ —Å–≤–æ–π –ø—É–ª –∏ –Ω–∞–ø–∏—à–∏, —á–µ–º —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã –∑–∞–Ω—è—Ç—å—Å—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ü–æ—Ö–æ–¥ –≤ –∫–∏–Ω–æ', '–ü–∏–∫–Ω–∏–∫ –≤ –ø–∞—Ä–∫–µ')\n\n"
        
        f"<b>–®–∞–≥ 3: –ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–∑–µ–π</b>\n"
        f"–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /invite\n"
        f"–í—ã–±–µ—Ä–∏ –ø—É–ª, –∫—É–¥–∞ —Ö–æ—á–µ—à—å –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π, –∏ –ø–æ–ª—É—á–∏ –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è\n"
        f"–û—Ç–ø—Ä–∞–≤—å —ç—Ç–æ—Ç –∫–æ–¥ –¥—Ä—É–∑—å—è–º - —Ç–æ–ª—å–∫–æ —Ç—ã –∫–∞–∫ —Å–æ–∑–¥–∞—Ç–µ–ª—å –ø—É–ª–∞ –º–æ–∂–µ—à—å –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–≥–∏—Ö!\n\n"
        
        f"<b>–®–∞–≥ 4: –î—Ä—É–∑—å—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—é—Ç—Å—è –∫ –ø—É–ª—É</b>\n"
        f"–¢–≤–æ–∏ –¥—Ä—É–∑—å—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç –∫–æ–º–∞–Ω–¥—É /join_pool [–∫–æ–¥]\n"
        f"–¢–µ–ø–µ—Ä—å –æ–Ω–∏ —Ç–æ–∂–µ –º–æ–≥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å —Å–≤–æ–∏ –∏–¥–µ–∏ –≤ –æ–±—â–∏–π –ø—É–ª!\n\n"
        
        f"<b>–®–∞–≥ 5: –í—Å–µ –≤–º–µ—Å—Ç–µ –ø–æ–ø–æ–ª–Ω—è–µ—Ç–µ –ø—É–ª –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º–∏</b>\n"
        f"–ö–∞–∂–¥—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å /add_activity\n"
        f"–ß–µ–º –±–æ–ª—å—à–µ —Ä–∞–∑–Ω—ã—Ö –∏–¥–µ–π - —Ç–µ–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ!\n\n"
        
        f"<b>–®–∞–≥ 6: –í—ã–±–∏—Ä–∞–π—Ç–µ —Å–ª—É—á–∞–π–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</b>\n"
        f"–ö–æ–≥–¥–∞ –Ω–µ –º–æ–∂–µ—Ç–µ —Ä–µ—à–∏—Ç—å, —á–µ–º –∑–∞–Ω—è—Ç—å—Å—è - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /select\n"
        f"–Ø –≤—ã–±–µ—Ä—É —Å–ª—É—á–∞–π–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å —É—á–µ—Ç–æ–º –∏—Å—Ç–æ—Ä–∏–∏ –∏ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏!\n\n"
        
        f"<b>‚ùó –í–∞–∂–Ω–æ: –°–∏—Å—Ç–µ–º–∞ —à—Ç—Ä–∞—Ñ–æ–≤ –¥–ª—è —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏</b>\n"
        f"–ö–æ–≥–¥–∞ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è —á—å—è-—Ç–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, –Ω–∞ –µ—ë –∞–≤—Ç–æ—Ä–∞ –Ω–∞–∫–ª–∞–¥—ã–≤–∞–µ—Ç—Å—è –Ω–µ–±–æ–ª—å—à–æ–π —à—Ç—Ä–∞—Ñ. "
        f"–≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –µ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –±—É–¥—É—Ç –≤—ã–ø–∞–¥–∞—Ç—å —Ä–µ–∂–µ. "
        f"–¢–∞–∫ –≤—Å–µ–º –±—É–¥–µ—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ, –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –±—É–¥—É—Ç —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω–µ–µ! (‚óï‚Äø‚óï‚úø)\n"
        f"–®—Ç—Ä–∞—Ñ—ã –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ —É–º–µ–Ω—å—à–∞—é—Ç—Å—è —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º, —Ç–∞–∫ —á—Ç–æ –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π!\n\n"
        
        f"<b>‚òÖ.:*„Éª¬∞‚òÜ –í—Å–µ –∫–æ–º–∞–Ω–¥—ã ‚òÜ¬∞„Éª*:.‚òÖ</b>\n\n"
        
        f"üåü <b>/start</b> - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫—Ä–∞—Ç–∫–∏–π –≥–∞–π–¥\n\n"
        
        f"üå∏ <b>/create_pool</b> - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—É–ª –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π\n"
        f"   –°–æ–∑–¥–∞–π —Å–≤–æ—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è–º–∏! –¢—ã –±—É–¥–µ—à—å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º –∏ —Å–º–æ–∂–µ—à—å –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–≥–∏—Ö.\n\n"
        
        f"üå∏ <b>/join_pool [–∫–æ–¥]</b> - –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –ø—É–ª—É\n"
        f"   –ù—É–∂–µ–Ω –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –æ—Ç —Å–æ–∑–¥–∞—Ç–µ–ª—è –ø—É–ª–∞.\n\n"
        
        f"üå∏ <b>/invite</b> - –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤ –ø—É–ª\n"
        f"   –¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –ø—É–ª–∞ –º–æ–∂–µ—Ç –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!\n\n"
        
        f"üå∏ <b>/exit_pool</b> - –í—ã–π—Ç–∏ –∏–∑ –ø—É–ª–∞\n"
        f"   –ü–æ–∫–∏–Ω—É—Ç—å –ø—É–ª, –µ—Å–ª–∏ –±–æ–ª—å—à–µ –Ω–µ —Ö–æ—á–µ—à—å —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å.\n\n"
        
        f"üå∏ <b>/my_pools</b> - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–≤–æ–∏ –ø—É–ª—ã\n"
        f"   –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—É–ª–æ–≤, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Ç—ã —É—á–∞—Å—Ç–≤—É–µ—à—å.\n\n"
        
        f"üç° <b>/add_activity</b> - –î–æ–±–∞–≤–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n"
        f"   –î–æ–±–∞–≤—å –Ω–æ–≤—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –ø—É–ª –¥–ª—è –≤—ã–±–æ—Ä–∞.\n\n"
        
        f"üç° <b>/list_activities</b> - –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π\n"
        f"   –ü–æ–∫–∞–∂–µ—Ç –≤—Å–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ø—É–ª–µ.\n\n"
        
        f"üç° <b>/select [–Ω–æ–º–µ—Ä_–ø—É–ª–∞]</b> - –í—ã–±—Ä–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n"
        f"   –í—ã–±–µ—Ä–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å —É—á–µ—Ç–æ–º —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è.\n\n"
        
        f"üìù <b>/pool_info [–Ω–∞–∑–≤–∞–Ω–∏–µ_–ø—É–ª–∞]</b> - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—É–ª–µ\n"
        f"   –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—É–ª–µ, —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö –∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—è—Ö.\n\n"
        
        f"üìù <b>/penalties</b> - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —à—Ç—Ä–∞—Ñ–∞—Ö\n"
        f"   –ü–æ–∫–∞–∂–µ—Ç —Ç–µ–∫—É—â–∏–µ —à—Ç—Ä–∞—Ñ—ã –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤–æ –≤—Å–µ—Ö —Ç–≤–æ–∏—Ö –ø—É–ª–∞—Ö.\n\n"
        
        f"–ù–∞–ø–∏—à–∏ /start –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫—Ä–∞—Ç–∫–æ–º—É –≥–∞–π–¥—É! (‡πëÀÉ·¥óÀÇ)Ôª≠"
    )
    
    await message.answer(help_text, parse_mode="HTML") 